<?xml version="1.0" encoding="UTF-8"?>
<test-data
    xmlns="http://pmd.sourceforge.net/rule-tests"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">

    <test-code>
        <description>bad, local variable of type java.util.Calendar</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>5</expected-linenumbers>
        <code><![CDATA[
import java.util.Calendar;

public class Foo {
    void bar() {
        Calendar c;
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>bad, param of type java.util.Calendar</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>4</expected-linenumbers>
        <code><![CDATA[
import java.util.Calendar;

public class Foo {
    void bar(Calendar d) {
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>bad, creating object of type java.util.GregorianCalendar</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>5</expected-linenumbers>
        <code><![CDATA[
import java.util.GregorianCalendar;

public class Foo {
    void bar() {
        new GregorianCalendar();
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>ok, not java.util.Calendar</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import foo.Calendar;

public class Foo {
    void bar(Calendar d) {
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>don't trigger too many violations when one change fixes all</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>5</expected-linenumbers>
        <code><![CDATA[
import java.util.Calendar;

public class Foo {
    void bar() {
        Calendar cal = Calendar.getInstance(TimeZone.getDefault(), Locale.getDefault()); // first violation
        cal.setTimeInMillis(timeNow);
        cal.set(Calendar.SECOND, 0); // second violation
        cal.set(Calendar.MILLISECOND, 0); // third
        cal.set(Calendar.HOUR_OF_DAY, mm); // fourth
        cal.set(Calendar.MINUTE, mm); // fifth
    }
}
        ]]></code>
    </test-code>
</test-data>
